name: Build
on:
  push:
    branches:
      - main
      - master

jobs:
  eslint:
    name: "ESLint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: yarn
      - name: Check lint
        run: yarn lint

  check-types:
    runs-on: ubuntu-latest
    name: "Check types"
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: yarn
      - name: Check types
        run: yarn check-types
      
  tests:
    name: "Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: yarn
      - name: Use .env.template
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env.template
      - name: Run tests
        run: yarn test

  build:
    runs-on: ubuntu-latest
    needs: [eslint, check-types, tests]
    name: "Build node app"
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: yarn
      - name: Build lib
        run: yarn build
      
    
  build-image:
    needs: [tests, eslint, check-types]
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build docker image
        run: docker build .

  release:
    name: Release
    needs: [build, build-image]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Release
        uses: justincy/github-action-npm-release@2.0.2
        id: release
      - name: Print release output
        if: ${{ steps.release.outputs.released == 'true' }}
        run: echo Release ID ${{ steps.release.outputs.release_id }}